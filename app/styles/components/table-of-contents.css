

/**
    The top, height, right, width of these are used to draw the lines connecting the nodes
    The nodes themselves spill outside of this div
*/
.table-of-contents {
    position: fixed;
    z-index: 7;

    &.top {
         top: $table-of-contents-top-offset;
         height: $table-of-contents-top-height;
         left: $document-left;
         width: $table-of-contents-width;
         &.expanded {
            height: $table-of-contents-height-expanded;
            background: $faded-gray-background;
         }
    }

    &.bottom {
        bottom: $table-of-contents-bottom-offset;
        height: $table-of-contents-bottom-height;
        left: $document-left;
        width: $table-of-contents-width;
        &.expanded {
            display: none;
        }
    }
}

.table-of-contents-icon {
    z-index: 0;
    position: absolute;
    right: 0;
    height: 100%;
}

.document-graph-svg {
    position: absolute;
    width: 100%;
    height: 100%;
}

.document-graph-circles {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
}

.table-of-contents-node {
    position: absolute;

    /***
        Fade the text of new nodes in so the user notices the change
    ***/
    &.table-of-contents-nodes-enter {
        .outline {
            color: rgba(0, 0, 0, 0);
            display: inline;
        }
    }
    &.table-of-contents-nodes-enter.table-of-contents-nodes-enter-active {
        .outline {
            color: black;
            transition: color 1000ms ease-in;
        }
    }
    &.table-of-contents-nodes-leave {
        color: black;
        display: none;
    }
    /***
        All text outlines have these properties
     ***/
    .outline {
        position: relative;
        display: inline;
        z-index: 2;
        vertical-align: middle;
        background: $half-white;
        border-color: $rescape-love;
        border-width: 2px;
        border-style: solid;
        font-family: $font-stack;
        color: black;
        text-align: center;

    }
    /***
        All circles have these properties
    ***/
    .circle {
        position: relative;
        z-index: 2;
        vertical-align: middle;
    }

    /***
        Connects circles with outlines
    ***/
    .connector {
        position: relative;
        z-index: 1;
        display:inline-block;
        vertical-align: middle;
        height: 1px;
        background: black;
    }

    &.toc-document {
        height: $table-of-contents-document-height;
        margin-left: calc(-1 * $table-of-contents-document-height / 2);
        margin-top: calc(-1 * $table-of-contents-document-height / 2);

        .document-comments-counter {
            position: absolute;
            top: calc(-1 * calc($table-of-contents-document-height / 2) + calc($comment-button-height / 6));
            left: calc(calc(-1 * $comment-button-width) - 5px);
            width: $comment-button-width;
            height: $comment-button-height;

        }
        .circle {
            z-index: 2;
            height: 100%;
            &:hover {
                cursor: pointer;
            }
        }
        .connector {
            margin-left: calc(-1 * $table-of-contents-document-height / 2  );
            width: calc($table-of-contents-document-height / 2)
        }
        .outline {
            z-index: 2;
            height: 100%;
            font-size: $h5-font-size;
            border-radius: 10px;
            padding: 5px;
        }
    }

    &.toc-model-current {
        height: $table-of-contents-model-current-height;
        margin-left: calc(-1 * $table-of-contents-model-current-height / 2);
        margin-top: calc(-1 * $table-of-contents-model-current-height / 2);
        .model-comments-counter {
            position: absolute;
            top: calc(-1 * calc($table-of-contents-model-current-height / 2));
            left: calc(calc(-1 * $comment-button-width-small) - 5px);
            width: $comment-button-width-small;
            height: $comment-button-height-small;
        }
        .circle {
            width: $table-of-contents-model-current-height;
            height: 100%;
        }
        .connector {
            margin-left: calc(-1 * $table-of-contents-model-current-height / 2  );
            width: calc($table-of-contents-document-height / 2)
        }
        .outline {
            color: $rescape-love;
            height: $table-of-contents-model-current-height;
            font-size: $h6-font-size;
            border-radius: 5px;
            padding: 4px;
        }
    }

    &.toc-model {
        height: $table-of-contents-model-height;
        margin-left: calc(-1 * $table-of-contents-model-height / 2);
        margin-top: calc(-1 * $table-of-contents-model-height / 2);
        font-size: $h6-font-size;
        &:hover {
            font-size: $h5-font-size;
            cursor: pointer;
            transition: width 200ms ease, height 200ms ease, margin-left 200ms ease, margin-top 200ms ease;
            right: -200px;
            height: calc($table-of-contents-model-height + 10px);
            margin-left: calc(-1 * ($table-of-contents-model-height + 10px) / 2);
            margin-top: calc(-1 * ($table-of-contents-model-height + 10px) / 2);
        }

        .circle {
            height: 100%;
        }
        .connector {
            margin-left: calc(-1 * $table-of-contents-model-height / 2  );
            width: calc($table-of-contents-document-height / 2)
        }
        .outline {
            height: 100%;
            border-radius: 5px;
            padding: 2px;
        }
    }

    &.toc-scene {
         left: -5px;
         height: 2px;
         width: 10px;
         background: black;
    }

    &.hidden-model-count {
        /*** Push the text away from the line **/
        height: 10px;
        margin-left: -45px;
        font-size: $h6-font-size;
        .outline {
             height: 10px;
             font-size: $h6-font-size;
             margin-left: 2px;
             border-radius: 5px;
             padding: 2px;
        }
    }
}

/***
    The vertical line segments connecting the table of contents nodes
***/
.line-segments {
    position: absolute;
    height: 100%;
    left: -1px;
    width: 2px;
}
.line-segment {
    position: absolute;
    width: 2px;
    background: black;

    /***
        The line representing missing nodes
    ***/
    &.dashed {
        left: 0px;
        background: none;
        border-left: 2px dotted black;
    }
}





.comments-counter {
    position: fixed;
    z-index: 10;
}

.comment-counter {
    position: relative;
    right: 0;
    top: 0px;
    width: 100%;
    height: 100%;
    color: $rescape-love;
    transition: right 300ms ease, width 300ms ease, height 300ms ease;
    &.comment-counter-document {
        font-size: $comment-count-font-size;
        &:hover {
            font-size: calc($comment-count-font-size * 1.1);
        }
    }
    &.comment-counter-model {
        font-size: $comment-count-font-size-small;
        &:hover {
            font-size: calc($comment-count-font-size-small * 1.1);
        }
    }
    &:hover {
         cursor: pointer;
         left: -10%;
         width: calc(110%);
         height: calc(110%);
         transition: right 300ms ease, width 300ms ease, height 300ms ease, font-size 300ms ease;
     }
}
.comment-icon {
    z-index: 0;
    position: absolute;
    width: 100%;
    height: 100%;
}

.comment-count {
    z-index: 1;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 32%;
    left: 10%;
    text-align: left;
    line-height: 10px;
    vertical-align: middle;
}


